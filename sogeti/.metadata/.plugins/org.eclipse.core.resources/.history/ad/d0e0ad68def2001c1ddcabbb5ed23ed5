package com.sogeti.asses.leaseCompany.SogetiAssesLeaseCompany.service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.netflix.appinfo.InstanceInfo;
import com.netflix.discovery.EurekaClient;
import com.netflix.discovery.shared.Application;
import com.sogeti.asses.leaseCompany.SogetiAssesLeaseCompany.controller.dao.LeaseComapnyDao;
import com.sogeti.asses.leaseCompany.SogetiAssesLeaseCompany.entity.Car;

@Service
public class LeaseCompanyService {
	
	@Autowired
	LeaseComapnyDao comapnyDao;
	

	@Autowired
	private RestTemplate restTemplate;

	@Autowired
	private EurekaClient eurekaClient;

	public long create(Car car) {
		return comapnyDao.save(car).getId();
	}

	public Car update(Car car, long id) {
		Car oldCar =null;
		Optional<Car> oldCustOpt = comapnyDao.findById(id);
		if(oldCustOpt.isPresent()) {
			oldCar = oldCustOpt.get();
			oldCar.setCo2Emission(car.getCo2Emission());
			oldCar.setGrossPrice(car.getGrossPrice());
			oldCar.setMake(car.getMake());
			oldCar.setMileage(car.getMileage());
			oldCar.setModel(car.getModel());
			oldCar.setNoOfDoors(car.getNoOfDoors());
			oldCar.setVersion(car.getVersion());
			oldCar.setDuration(car.getDuration());
			oldCar.setInterestRate(car.getInterestRate());
			oldCar.setLeaseRate();
			oldCar.setStartDate(car.getStartDate());
			oldCar = comapnyDao.save(oldCar);
		}
		return oldCar;
	}

	public List<Car> findAll() {
		return comapnyDao.findAll();
	}

	public Optional<Car> findById(long id) {
		return comapnyDao.findById(id);
	}

	public void deleteById(long id) {
		comapnyDao.deleteById(id);
	}


	@SuppressWarnings("unchecked")
	public Map<String, Double> getCars() {
		Map<String, Double> map = new HashMap<String, Double>();
		Application app = eurekaClient.getApplication("LEASECOMPANYSERVICE");
		InstanceInfo instance = app.getInstances().get(0);
		String url = "http://" + instance.getIPAddr() + ":" + instance.getPort() + "/find";
		System.out.println(url);
		List cars = restTemplate.getForObject(url, List.class);
		cars.stream().forEach(c ->{
			HashMap<String,Object> car = (HashMap<String,Object>)c;
			map.put(car.get("model").toString(),((double)car.get("grossPrice")));
		});
		return map;
	}
}
